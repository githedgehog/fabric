---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: ipv4namespaces.vpc.githedgehog.com
spec:
  group: vpc.githedgehog.com
  names:
    categories:
    - hedgehog
    - wiring
    - fabric
    kind: IPv4Namespace
    listKind: IPv4NamespaceList
    plural: ipv4namespaces
    shortNames:
    - ipns
    singular: ipv4namespace
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.subnets
      name: Subnets
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: |-
          IPv4Namespace represents a namespace for VPC subnets allocation. All VPC subnets within a single IPv4Namespace are
          non-overlapping. Users can create multiple IPv4Namespaces to allocate same VPC subnets.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the desired state of the IPv4Namespace
            properties:
              subnets:
                description: Subnets is the list of subnets to allocate VPC subnets
                  from, couldn't overlap between each other and with Fabric reserved
                  subnets
                items:
                  type: string
                maxItems: 20
                minItems: 1
                type: array
            type: object
          status:
            description: Status is the observed state of the IPv4Namespace
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
