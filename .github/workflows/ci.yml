name: CI

on:
  push:
    branches: ["master"]
  pull_request:
  schedule:
    - cron: "0 10 * * *" # ~2am PST
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: "Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)"
        required: false
        default: false

env:
  REGISTRY: ghcr.io
  ORG: githedgehog

jobs:
  test-envtest:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "^1.19"
          cache: true

      - name: Run tests
        run: make test

      - name: Setup tmate session for debug
        if: ${{ failure() && github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 30
        with:
          limit-access-to-actor: true

  test-lint-dirty:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "^1.19"
          cache: true

      - name: Check dirty after generators
        run: |
          make generate manifests docs
          git status --short
          git diff --quiet

      - name: Run linters
        run: |
          make ci-lint kube-lint

      - name: Setup tmate session for debug
        if: ${{ failure() && github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 30
        with:
          limit-access-to-actor: true

  test-deploy-kind:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "^1.19"
          cache: true

      - name: Cache kustomize binary
        uses: actions/cache@v3
        with:
          path: bin/kustomize
          key: bin-kustomize-build-${{ hashFiles('Makefile') }}

      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.4.0
        with:
          cluster_name: kind

      - name: Install CRDs, controller-manager and do basic checks
        run: |
          make deploy-kind
          kubectl get crd | grep hedgehog
          kubectl apply -k config/samples
          kubectl -n fabric-system wait deploy fabric-controller-manager --for condition=Available=True --timeout=60s
          kubectl wait fabric fabric-sample --for condition=Available=True --timeout=30s
          make run-agent AGENT_HOSTNAME=agent-sample &
          kubectl wait agent/agent-sample --for condition=Ready --timeout=30s

      - name: Setup tmate session for debug
        if: ${{ failure() && github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 30
        with:
          limit-access-to-actor: true

  build-publish-dockers:
    needs:
      - test-envtest
      - test-lint-dirty
      - test-deploy-kind
    runs-on: ubuntu-latest

    strategy:
      matrix:
        binary:
          - fabric
          - agent
        platform:
          - linux/amd64
          - linux/arm64
          - linux/arm/v7

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@57396166ad8aefe6098280995947635806a0e6ea
        with:
          images: ${{ env.REGISTRY }}/${{ env.ORG }}/${{ matrix.binary }}
          tags: |
            type=ref,event=branch
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Caching scope for Docker
        id: cache
        run: |
          ref="${{ github.ref_name }}"
          if ${{ github.event_name == 'pull_request' }}; then
            ref="${{ github.base_ref }}"
          fi
          if ${{ github.ref_type == 'tag' }}; then
            ref="master"
          fi

          from="type=gha,scope=$ref-${{ matrix.binary }}-${{ matrix.platform }}"
          to=""

          # cache only master branch for now
          if ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}; then
            to="mode=max,$from"
          fi

          echo "from=$from" >> "$GITHUB_OUTPUT"
          echo "to=$to" >> "$GITHUB_OUTPUT"

          echo "cache-from: $from"
          echo "cache-to: $to"

      - name: Build and push (on master only) Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: Dockerfile.${{ matrix.binary }}
          platforms: ${{ matrix.platform }}
          push: ${{ github.ref == 'refs/heads/master' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: ${{ steps.cache.outputs.from }}
          cache-to: ${{ steps.cache.outputs.to }}

      - name: Setup tmate session for debug
        if: ${{ failure() && github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 30
        with:
          limit-access-to-actor: true

  build-publish-dockers-results:
    name: Docker Build/Publish Results
    needs:
      - build-publish-dockers
    if: ${{ always() }}
    runs-on: ubuntu-latest

    steps:
      - run: |
          result="${{ needs.build-publish-dockers.result }}"
          if [[ $result == "success" || $result == "skipped" ]]; then
            exit 0
          else
            exit 1
          fi
