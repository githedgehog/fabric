//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Copyright 2023 Hedgehog
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha2

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DHCPAllocated) DeepCopyInto(out *DHCPAllocated) {
	*out = *in
	in.Expiry.DeepCopyInto(&out.Expiry)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DHCPAllocated.
func (in *DHCPAllocated) DeepCopy() *DHCPAllocated {
	if in == nil {
		return nil
	}
	out := new(DHCPAllocated)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DHCPSubnet) DeepCopyInto(out *DHCPSubnet) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DHCPSubnet.
func (in *DHCPSubnet) DeepCopy() *DHCPSubnet {
	if in == nil {
		return nil
	}
	out := new(DHCPSubnet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DHCPSubnet) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DHCPSubnetList) DeepCopyInto(out *DHCPSubnetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DHCPSubnet, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DHCPSubnetList.
func (in *DHCPSubnetList) DeepCopy() *DHCPSubnetList {
	if in == nil {
		return nil
	}
	out := new(DHCPSubnetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DHCPSubnetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DHCPSubnetSpec) DeepCopyInto(out *DHCPSubnetSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DHCPSubnetSpec.
func (in *DHCPSubnetSpec) DeepCopy() *DHCPSubnetSpec {
	if in == nil {
		return nil
	}
	out := new(DHCPSubnetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DHCPSubnetStatus) DeepCopyInto(out *DHCPSubnetStatus) {
	*out = *in
	if in.Allocated != nil {
		in, out := &in.Allocated, &out.Allocated
		*out = make(map[string]DHCPAllocated, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DHCPSubnetStatus.
func (in *DHCPSubnetStatus) DeepCopy() *DHCPSubnetStatus {
	if in == nil {
		return nil
	}
	out := new(DHCPSubnetStatus)
	in.DeepCopyInto(out)
	return out
}
